// File generated by 'DofusProtocolBuilder.exe v1.0.0.0'
// From 'NpcDialogQuestionMessage.xml' the '04/04/2012 14:27:28'
using System;
using Stump.Core.IO;
using System.Collections.Generic;
using System.Linq;

namespace Stump.DofusProtocol.Messages
{
	public class NpcDialogQuestionMessage : Message
	{
		public const uint Id = 5617;
		public override uint MessageId
		{
			get
			{
				return 5617;
			}
		}
		
		public short messageId;
		public IEnumerable<string> dialogParams;
		public IEnumerable<short> visibleReplies;
		
		public NpcDialogQuestionMessage()
		{
		}
		
		public NpcDialogQuestionMessage(short messageId, IEnumerable<string> dialogParams, IEnumerable<short> visibleReplies)
		{
			this.messageId = messageId;
			this.dialogParams = dialogParams;
			this.visibleReplies = visibleReplies;
		}
		
		public override void Serialize(IDataWriter writer)
		{
			writer.WriteShort(messageId);
			writer.WriteUShort((ushort)dialogParams.Count());
			foreach (var entry in dialogParams)
			{
				writer.WriteUTF(entry);
			}
			writer.WriteUShort((ushort)visibleReplies.Count());
			foreach (var entry in visibleReplies)
			{
				writer.WriteShort(entry);
			}
		}
		
		public override void Deserialize(IDataReader reader)
		{
			messageId = reader.ReadShort();
			if ( messageId < 0 )
			{
				throw new Exception("Forbidden value on messageId = " + messageId + ", it doesn't respect the following condition : messageId < 0");
			}
			int limit = reader.ReadUShort();
			dialogParams = new string[limit];
			for (int i = 0; i < limit; i++)
			{
				(dialogParams as string[])[i] = reader.ReadUTF();
			}
			limit = reader.ReadUShort();
			visibleReplies = new short[limit];
			for (int i = 0; i < limit; i++)
			{
				(visibleReplies as short[])[i] = reader.ReadShort();
			}
		}
	}
}
